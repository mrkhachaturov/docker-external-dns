trigger: none

stages:
  - stage: quality_gateway
    pool: default
    jobs:
      - job: docker_quality_tests
        steps:
          - task: PowerShell@2
            displayName: 'Docker: generating quality reports (testing & linting)'
            inputs:
              targetType: 'inline'
              script: |
                $identity = New-Guid
                $name = "docker-compose-external-dns.quality.$identity"
                docker build --target tests --tag $name .
                docker run -v /var/run/docker.sock:/var/run/docker.sock --name $name -a stdin -a stdout -a stderr $name
                docker cp "$($name):/app/src" "$($env:ARTIFACT_STAGING_DIRECTORY)/src"
                docker cp "$($name):/app/reports" "$($env:ARTIFACT_STAGING_DIRECTORY)/reports"
                docker container rm $name
                docker image rm $name
            env:
              ARTIFACT_STAGING_DIRECTORY: $(Build.ArtifactStagingDirectory)

          - task: PublishTestResults@2
            condition: succeededOrFailed()
            displayName: 'Publish & Check: Test, Linting & Formatting'
            inputs:
              testRunner: JUnit
              testResultsFiles: '$(Build.ArtifactStagingDirectory)/reports/*junit*.xml'
              failTaskOnFailedTests: true

          - task: PublishCodeCoverageResults@2
            condition: succeededOrFailed()
            displayName: 'Publish: Coverage'
            inputs:
              summaryFileLocation: '$(Build.ArtifactStagingDirectory)/reports/*cobertura*.xml'
              pathToSources: '$(Build.ArtifactStagingDirectory)/src/'
              failIfCoverageEmpty: true

          - task: BuildQualityChecks@9
            condition: succeededOrFailed()
            displayName: 'Check: Code Coverage Check'
            inputs:
              checkCoverage: true
              coverageFailOption: 'fixed'
              coverageType: 'lines'
              coverageThreshold: '50'
